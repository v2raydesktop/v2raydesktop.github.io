<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raydesktop.github.io/news/article-21746.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Python数据结构-列表</title>
        <meta name="description" content="正则小练习：匹配出以下字符串所有url， import re  def find_url(sentence, show_urls=None, delete_urls=None):     r = re" />
        <link rel="icon" href="/assets/website/img/v2raydesktop/favicon.ico" type="image/x-icon"/>
    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raydesktop/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-CMVHYP8P2G"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-CMVHYP8P2G');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                                <span>
                    <a class="navbar-brand" href="/">V2ray Desktop</a>
                </span>
                                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <!--//header-->

    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2">Python数据结构-列表</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about -->
    <section class="w3l-features-photo-7 py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="ud7d2d73c">正则小练习：<span style="color:#fe2c24;">匹配出以下字符串所有url</span>，</p> <pre><code class="language-python">import re  def find_url(sentence, show_urls=None, delete_urls=None):     r = re.compile(         r'(?i)\b((?:[a-z][\w-]+:(?:/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()&lt;&gt;]+|\(([^\s()&lt;&gt;]+|(\([^\s()&lt;&gt;]+\)))*\))+(?:\(([^\s()&lt;&gt;]+|(\([^\s()&lt;&gt;]+\)))*\)|[^\s`!()\[\]{};:\'".,&lt;&gt;?«»“”‘’]))')     url_list = r.findall(sentence)     if show_urls == 1:         for i in url_list:             print(i[0])      if delete_urls == 1:         for j in url_list:             # sentence = sentence.replace(j[0], '&lt;URL&gt;')             sentence = sentence.replace(j[0], '')         return sentence     return "匹配完成"   if __name__ == '__main__':     str1 = '你好哇 大佬 www.google.com' 	str2 = '哇 www.baidu.com 打不开了' 	str3 = 'python网址在哪儿 https://www.python.com 找到了'     </code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="uefda320f" src="http://img.555519.xyz/uploads/20230110/89a45e2b11a666621106635259467131.jpg"></p> <p id="ua46bf048">对于字符串的基础使用基本已经阐述完毕！需要复杂使用的还需<span style="color:#fe2c24;">项目实战</span>以及<span style="color:#fe2c24;">向大佬们请教</span>。后面的几篇文章还是想阐述关于数据结构的一些基础使用。字符串可以看作为只存储字符序列的数据结构，同样为了方便众多使用者的理念，Python提供了几个功能强大且高效的数据结构：列表、元组、字典以及集合。作为使用者的我们只需要组合使用即可。</p> <p id="uba0155ba">在开始数据结构使用前，需要介绍一个Python的另一个内置函数：type()，该函数在我们需要了解值或变量的数据类型时极为方便。如下：type输出结果中包含class 类，可以返回特定值和变量或者是否为模块函数。在代码调试过程中，该函数会起到很大的作用，例如在使用数据集合但并不知集合内部的数据类型时，可以使用type准确的返回对象类型。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u11bf6176" src="http://img.555519.xyz/uploads/20230110/c9743ced3eae5882f7502640360c3bb1.jpg"></p> <pre><code>本文重点内容主要是对列表数据结构的使用</code></pre> </h1> <p id="u9386b608">在Python中，序列是一组按顺序排列的值。Python 有 3 种内置的序列类型：字符串、 元组和列表。 序列支持切片、索引，同时具备以下特征：</p> <p id="ud614c653">1 第一个正索引为零，指向左端；</p> <p id="uecd7f71c">2 第一个负索引为 -1，指向右端；</p> <p id="u93397f1d">3 可使用切片表示法来复制子序列；</p> <p id="ue53ea913">4 可使用 + 和 * 进行拼接；</p> <p id="u12832640">5 可使用函数 len 计算其长度，例如，len(string) 返回序列 string 包含的元素数;</p> <p id="u808dd79c">6 表达式 x in string 检查序列 string 是否包含元素 x 。</p> </h1> <p id="uafa93fcb">在Python中，列表的元素不是固定不变的，而是可变的，也就是表示可在不复制的情况下，添加、删除或修改列表元素。列表使用方括号将元素括起来，里面的元素使用逗号分开，举几个简单示例：随便定义一个num列表，可以使用+和*拼接列表，也可以使用len()获取列表长度，并且，同样可以使用切片和索引方式来获取列表中的子列表。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u1d72eef6" src="http://img.555519.xyz/uploads/20230110/49557cec8aa5d1f8f4a53b7319bbe380.jpg"></p> <p id="ufe78a578">需要注意的是：列表可包含任何类型的值：数字、字符串甚至其他序列。空列表用 [] 表示，而只包含一个元素（x）的单元素列表写做 [x] 。其访问方式与字符串的索引方式一样，以num2为例，如下图：列表索引从 <strong>0</strong> 开始，第二个索引是 <strong>1</strong>，依此类推。<span style="color:#fe2c24;">当然也可以从右向左进行索引</span>。</p> <p style="text-align:center;"><img decoding="async" alt="" id="qc7Tn" src="http://img.555519.xyz/uploads/20230110/673b6e608ebc1efb4476fbaea85ca758.jpg"></p> <p id="u2b3a6f0f">除了以上索引功能，列表也支持修改元素的功能，如下图我们将num2中的indexes=3的值777改为了'red'字符串，Python对原值进行了删除。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u5d8b3206" src="http://img.555519.xyz/uploads/20230110/33c5979aa84a3dcb4732aa751237e4fe.jpg"></p> <p id="ub26dc205">这里可以得到一个结论：列表元素指向相应的值，这也产生了一个十分有趣的作用。这里让一个列表元素指向列表本身，创建了一个自引用的数据结构；打印输出中的 [...] 表明，Python可以识别自引用，不会愚蠢的不断打印列表（功能强大！） 。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u8b78cca1" src="http://img.555519.xyz/uploads/20230110/db232eeb1a2a49fbb5ee9fb4e49bfdd4.jpg"></p> <pre><code class="language-html">本文首发公众号：涤生手记大数据：更多资源，更便捷，浏览交流，更多免费职业规划，请关注哦。</code></pre> <h2>&nbsp;2.1 列表函数</h2> <p id="u02a4217f">Python针对列表也提供了十分强大的函数，整理如下表所示：除count返回值只返回一个数字之外，其他所有函数都涉及到修改传递给它们的列表。使用时一定小心，不然会误删列表中的元素或者在错误的位置插入元素。</p> <table id="Sgwuc"> <tbody> <tr> <td> <p id="udd16139d">函数名</p> </td> <td> <p id="ue15cc13d">返回值</p> </td> </tr> <tr> <td> <p id="u32f4cddf">num.append(n)</p> </td> <td> <p id="u1f15fe6d">在列表 num 末尾添加元素 n</p> </td> </tr> <tr> <td> <p id="u8074f6ee">num.count(n)</p> </td> <td> <p id="u8021c366">返回元素 n 在列表 num 中出现的次数</p> </td> </tr> <tr> <td> <p id="u3237442c">num.extend(lnumt)</p> </td> <td> <p id="uabc4df57">将 lnumt 的所有元素都添加到列表 num末尾</p> </td> </tr> <tr> <td> <p id="u1f043e06">num.indexnajiu (n)</p> </td> <td> <p id="u44f1eb45">返回第一个 n 元素的索引</p> </td> </tr> <tr> <td> <p id="u6a0baa23">num.innumert(i, n)</p> </td> <td> <p id="ud3e73165">将元素 n 插入到索引 i 指定的元素前面，结果是 num[i] == n</p> </td> </tr> <tr> <td> <p id="u2fa85731">num.pop(i)</p> </td> <td> <p id="u3fbaa02a">删除并返回 num 中索引为 i 的元素</p> </td> </tr> <tr> <td> <p id="uacd31bda">num.remove(n)</p> </td> <td> <p id="u371e2bf9">删除 num 中的第一个 n 元素</p> </td> </tr> <tr> <td> <p id="u15428f2f">num.revernume()</p> </td> <td> <p id="u73f6a197">反转 num 中元素的排列顺序</p> </td> </tr> <tr> <td> <p id="u2018310e">num.numort()</p> </td> <td> <p id="uc49bdfb5">将 num 的元素按升序排列</p> </td> </tr> </tbody> </table> <p id="u81bc35b6">以函数append为例，在列表num末尾添加一个元素，简单的一种编程模式，在函数开头创建一个空列表，然后再列表中添加元素，如下：<span style="color:#fe2c24;">判断一个列表中的数据是正数还是负数</span>。</p> <pre><code class="language-python">def list_num(list):     msg = []     for num in list:         if num &lt; 0:             s = str(num) + ' 是负数'         elif 0 &lt;= num &lt;= 9:             s = str(num) + ' 是正数'         msg.append(s)     return msg  if __name__ == '__main__':     print(list_num([3,-10.7,22,-99,1]))</code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="ufad29549" src="http://img.555519.xyz/uploads/20230110/6260abf8ed72be9d4bbc56d3e8df0c88.jpg"></p> <p id="u27e4edd7">extend列表追加函数的使用：</p> <p style="text-align:center;"><img decoding="async" alt="" id="ua329f5d2" src="http://img.555519.xyz/uploads/20230110/6b7d04f131713782ff33e50085a245ca.jpg"></p> <p id="u056d9531">pop删除函数的使用：</p> <p style="text-align:center;"><img decoding="async" alt="" id="uaefc9904" src="http://img.555519.xyz/uploads/20230110/101ce34c0f7d8b9ee392361f0c2a4931.jpg"></p> <p id="uc3c4d412">其它相关函数的使用就不一一举例了，有兴趣的可以自己体验一下。</p> <h2 id="BHu0G">2.2 列表排序</h2> <p id="ua4b3c3aa">对数据进行排序是计算机最常做的事情 之一。无论是对人还是计算机来说，排序后 的数据通常比未排序的数据更容易处理。例如，在列表中查找最小的元素时，如果列表经过了排序，就根本不需要查找：第一个元素就是，人们的习惯就是喜欢排列有序的数据（特例除外哈）。</p> <p id="u7db15479">在 Python 中，要对列表进行排序，最简 单的方式是使用函数 sort()。实际上，这个函数可用于对包含数万个元素的列表进行快速排序，同时可以修改列表。如下：sort总是按照从小到大的顺序排序，若需要相反的顺序排列元素，先调用sort方法之后在使用reverse方法。</p> <p style="text-align:center;"><img decoding="async" alt="" id="ue3344a16" src="http://img.555519.xyz/uploads/20230110/713e0949c732b293e3696c28f941ec5a.jpg"></p> <p style="text-align:center;"><img decoding="async" alt="" id="u14bdc30a" src="http://img.555519.xyz/uploads/20230110/954d1f0b43becb3997bf9c3a3810ed7c.jpg"></p> <p id="u6206d1cb">Python还可以给包含元组（将在下次讲解）的列表进行排序，如下：给列表中的元组排序时，首先按元组的 第一个元素排序，如果第一个元素相同，则按第二个元素排序，依此类推。</p> <p style="text-align:center;"><img decoding="async" alt="" id="u2f9f7968" src="http://img.555519.xyz/uploads/20230110/bf1d1521d5f03279f4ff09952536cbf8.jpg"></p> <h2 id="qebfx">2.3 解析列表</h2> <p id="u0c906980">在实际Python使用中，会有很多地方使用到列表，所以Python提供了一种用于创建列表的特殊表示法—列表解析。下面举例如何使用列表解析来创建 一个由 1~10 的平方组成的列表： 这种表示法的主要优点是简洁易读。for循环代码没有使用列表解析，使用越多就越会发现，列表解析方法编写容易并且简洁。</p> <pre><code class="language-python">if __name__ == '__main__':     print([num * num for num in range(1,11)])     print('------------------')     num_list = []     for i in range(1, 11):        num_list.append(i * i)     print(num_list)</code></pre> <p style="text-align:center;"><img decoding="async" alt="" id="u6283aba8" src="http://img.555519.xyz/uploads/20230110/386e20a447a9844be9bfa6df8c333437.jpg"></p> <p id="u3a5bacd9">在看3个小例子：第一个表示获取1~10的立方，第二个表示修改现有列表的字符串，第三个表示将列表中的数字翻倍并减去3.</p> <p style="text-align:center;"><img decoding="async" alt="" id="ua5d9a15b" src="http://img.555519.xyz/uploads/20230110/7dba7055cbe5988ef00f34423439ad3c.jpg"></p> <p id="ufebefd15">使用列表解析过滤筛选需要的结果集，如下：</p> <p style="text-align:center;"><img decoding="async" alt="" id="ue2e33770" src="http://img.555519.xyz/uploads/20230110/2214e38f6abce6f8d90c25321501052a.jpg"></p> <pre><code class="language-python">list = []     num = [-1, 0, 6, -4, -2, 3, 8, -12]     for n in num:         if n &gt; 0:             list.append(n)</code></pre> <p id="u588c862a">对比使用常规循环，可以体现出列表解析更加简洁易读！其它还可以实现诸如删除特定字符串的功能，有兴趣的朋友们可以实现一下删除特定字符串的列表解析，十分简单。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21215.htm">同城免费领养宠物狗的软件有哪些（免费领养宠物狗的平台）</a></p>
                                        <p>下一个：<a href="/news/article-21747.htm">宠物领养协议具有法律效应吗为什么还要签字（宠物领养协议需要身份证复印件吗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-19382.htm" title="1970年农历四月二十是什么星座（1970年阴历四月二十是什么星座）">1970年农历四月二十是什么星座（1970年阴历四月二十是什么星座）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-3-free-subscribe-node.htm" title="11月3日→21M/S|2024年最新免费节点V2ray Desktop订阅链接地址">11月3日→21M/S|2024年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-22587.htm" title="动物医院英文怎么说呢怎么读 动物医院英文怎么说呢怎么读">动物医院英文怎么说呢怎么读 动物医院英文怎么说呢怎么读</a></li>
                        <li class="py-2"><a href="/news/article-19381.htm" title="我们如何将值添加到MySQL表的列中？">我们如何将值添加到MySQL表的列中？</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-13-free-node-subscribe-links.htm" title="12月13日→19.1M/S|2024年最新免费节点V2ray Desktop订阅链接地址">12月13日→19.1M/S|2024年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-free-high-speed-nodes.htm" title="11月30日→20.6M/S|2024年最新免费节点V2ray Desktop订阅链接地址">11月30日→20.6M/S|2024年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-32401.htm" title="宠物粮从哪里进货便宜又好吃呢图片（宠物粮在哪里买比较放心）">宠物粮从哪里进货便宜又好吃呢图片（宠物粮在哪里买比较放心）</a></li>
                        <li class="py-2"><a href="/news/article-27682.htm" title="动物疫苗的作用意义和价值是什么呢（动物疫苗是什么意思）">动物疫苗的作用意义和价值是什么呢（动物疫苗是什么意思）</a></li>
                        <li class="py-2"><a href="/news/article-18922.htm" title="猫猫为什么不能打头（为什么说猫不能打）">猫猫为什么不能打头（为什么说猫不能打）</a></li>
                        <li class="py-2"><a href="/news/article-29080.htm" title="广州的宠物领养机构排名榜（广州领养宠物中心）">广州的宠物领养机构排名榜（广州领养宠物中心）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //about -->
        <!-- copyright -->
    <section class="w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">V2ray Desktop免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                </p>
                <div class="col-lg-4 text-right">
                    <div class="main-social-footer-29">
                        <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                        <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                        <a href="#google"><span class="fa fa-google-plus" aria-hidden="true"></span></a>
                        <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                        <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- //copyright -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raydesktop/jquery-3.6.0.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raydesktop/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/v2raydesktop/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raydesktop/counter.js"></script>
    <!-- //counter for stats -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <script src="/assets/website/js/frontend/v2raydesktop/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>