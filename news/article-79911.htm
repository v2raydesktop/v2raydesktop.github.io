<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raydesktop.github.io/news/article-79911.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具</title>
        <meta name="description" content="https://devblogs.microsoft.com/dotnet/corewcf-v1-released/ CoreWCF 项目组正式发布 1.0 版本的 CoreWCF, 这是面向 .NE" />
        <link rel="icon" href="/assets/website/img/v2raydesktop/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Desktop免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raydesktop.github.io/news/article-79911.htm" />
    <meta property="og:site_name" content="V2ray Desktop免费机场订阅节点官网" />
    <meta property="og:title" content="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具" />
    <meta property="og:image" content="https://v2raydesktop.github.io/uploads/20241101-1/f1eb63816ee5b6fae6e0550e50d2aa10.webp" />
        <meta property="og:release_date" content="2025-03-23T08:25:00" />
    <meta property="og:updated_time" content="2025-03-23T08:25:00" />
        <meta property="og:description" content="https://devblogs.microsoft.com/dotnet/corewcf-v1-released/ CoreWCF 项目组正式发布 1.0 版本的 CoreWCF, 这是面向 .NE" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raydesktop/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-CMVHYP8P2G"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-CMVHYP8P2G');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                <span>
                    V2ray Desktop                </span>
                                </a>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </nav>
        </div>
    </header>
    <!--//header-->

    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2">CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF &#8211; 冠军 _在线工具</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about -->
    <section class="w3l-features-photo-7 py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="V2ray X节点订阅官网" data-url="https://v2rayx.github.io">
                  				  				  				</h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/corewcf-v1-released/"  target="_blank"  rel="nofollow">https://devblogs.microsoft.com/dotnet/corewcf-v1-released/</a></p> <p>CoreWCF 项目组正式发布 1.0 版本的 CoreWCF, 这是面向 .NET Core 平台的 WCF 移植版本。它支持 SOAP、NetTCP 和 WSDL 的相同实现。在代码中的使用方式于 WCF 相同，但是升级到使用 ASP.NET Core 作为服务宿主，并工作在 .NET Core 平台上。这是该项目的第一个主要发布，为 .NET Core、.NET Framework 和 .NET 5+ 提供 WCF 的特性。</p> <p>CoreWCF 1.0 版本兼容于 .NET standard 2.0，所以它可以工作在：</p> <ul> <li>.NET Framework 4.6.2 (及以上)</li> <li>.NET Core 3.1</li> <li>.NET 5 &amp; 6</li> </ul> <p>对于 .NET Framework 的支持简化了了迁移到 .NET Core 代价。依赖 WCF 的应用程序可以在 .NET Framewordk 平台就地升级到使用 CoreWCF。对于随后升级到使用 .NET Core 或者 .NET 5+ 也一样。</p> <p>程序集可以通过 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/profiles/corewcf"  target="_blank"  rel="nofollow">Nuget.org</a> 得到，参见<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/CoreWCF/CoreWCF/releases/latest"  target="_blank"  rel="nofollow">发布说明</a>中的描述。</p> <h2 id="社区项目">社区项目</h2> <p>CoreWCF 于 2019年6 月作为<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/supporting-the-community-with-wf-and-wcf-oss-projects/"  target="_blank"  rel="nofollow">社区项目</a> 发布，在随后的 3 年中有众多的贡献者。作为社区项目，CoreWCF 有大量的来自微软员工之外的贡献者，以及常规的来自 AWS 和其它组织的贡献者。</p> <p>特别感想 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/CoreWCF/CoreWCF/graphs/contributors"  target="_blank"  rel="nofollow">所有</a> 贡献代码的开发者、问题以及建议者。该项目能够发展到今天，社区的支持至关重要，我们希望今后继续得到大家的支持。如果我不特别提到@ mconnew，那将是我的失职，他一直是项目的骨干，并贡献了大部分代码。</p> <p>作为社区项目，来自社区的声音引导着项目的方向。例如，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/CoreWCF/CoreWCF/issues/234"  target="_blank"  rel="nofollow">Feature Roadmap Vote issue</a> 是计划下一步工作的高度流畅的渠道。如果你是 WCF 用户，请提供你对今后版本的期待。</p> <h2 id="特性">特性</h2> <p>CoreWF 是来自 WCF 功能子集，但是包含了我们相信是其中最为重要的部分功能，包括</p> <ul> <li>Http &amp; NetTCP transports</li> <li>Bindings: <ul> <li>BasicHttpBinding</li> <li>NetHttpBinding</li> <li>NetTcpBinding – some WS-* features not supported</li> <li>WebHttpBinding</li> <li>WSHttpBinding – some WS-* features not supported</li> </ul> </li> <li>Security: <ul> <li>Transport</li> <li>NetTcpBinding supports Certificate and Windows authentication</li> <li>Http bindings require authentication to be configured in ASP.NET Core</li> <li>Transport With Message Credentials</li> <li>Username, Certificate and Windows Authentication are supported</li> <li>WS Federation</li> </ul> </li> <li>WSDL generation</li> <li>Partial configuration support including services &amp; endpoints</li> <li>Extensibility (IServiceBehavior and IEndpointBehavior) – most extensibility is available</li> </ul> <p>没有实现的 WCF 主要功能有：</p> <ul> <li>Transports other than Http and NetTCP.</li> <li>Message security beyond Transport &amp; Transport with Message Credentials</li> <li>Distributed transactions</li> <li>Message Queueing</li> </ul> <h2 id="谁应该使用-corewcf">谁应该使用 CoreWCF？</h2> <p>CoreWCF 面向的对象是曾经在 .NET Framework 下使用 WCF 的开发者，以及需要在 .NET Core 下需要使用 WCF 来现代化应用的开发者。尽管并没有什么可以阻止你对新项目适配 CoreWCF，我们还是建议你考虑更为现代的 SOAP 的替代品，例如 gRPC。CoreWCF 的关键点是对强依赖于 WCF 和 SOAP 的服务器和客户端应用更为简单的进行现代化。</p> <h2 id="来自微软的支持">来自微软的支持</h2> <p>我们认可对于企业客户的支持是如何重要，所以我们很高兴地宣布微软的产品支持将提供给 CoreWCF 客户。</p> <p>对于 CoreWCF 1.x 的支持将基于底层运行的 .NET 平台状态。</p> <table> <thead> <tr> <th>运行时版本</th> <th>Support dependency duration</th> </tr> </thead> <tbody> <tr> <td>.NET Framework 4.x</td> <td>The specific version of .NET Framework, and ASP.NET Core 2.1.</td> </tr> <tr> <td>.NET Core 3.1</td> <td>.NET 3.1 LTS – December 3, 2022</td> </tr> <tr> <td>.NET 5</td> <td>.NET 5 – May 8, 2022</td> </tr> <tr> <td>.NET 6</td> <td>.NET 6 LTS – November 8, 2024</td> </tr> </tbody> </table> <p>CoreWCF 将使用 Major.Minor 版本策略:</p> <ul> <li>1.0 将是 CoreWCF 的第一个主要版本</li> <li>Minor 发布将标记为 1.x，对基础平台的要求与 1.0 相同</li> <li>Minor 发布版本 (1.x) 将 API 兼容于 1.0 版本</li> <li>对于主要版本的支持将会持续到最后的 major.minor 发布 <ul> <li>当新的 major 或者 minor 发布的时候，上一版本将从新版本发布之日起，继续支持 6 个月，前提是正在使用的基础运行时依赖项仍在支持范围内。</li> </ul> </li> <li>后继的主要版本，例如 2.0，可能缩减支持的运行时。对于当前的 1.x 版本，会对于 2.x 版本不再支持的版本继续支持 6 个月，并且支持的时间仅限于底层的平台。 <ul> <li>最可能涉及到 .NET Framework，并且意味着只要支持 ASP.NET Core 2.1 和 .NET Framework 4.x，就可以支持 1.x。</li> </ul> </li> </ul> <h3 id="更多支持">更多支持</h3> <p>其它的组织或者公司可能选择支持使用了 CoreWCF 的产品或者服务。</p> <h2 id="使用入门">使用入门</h2> <p>对于数据和服务的定义与实现于 WCF 相同。主要的区别在于现在的宿主变成了 ASP.NET Core，以及服务暴露出来的方式。以下示例基于 .NET 6，但是同样的步骤也适用于其它平台。</p> <h3 id="1-定义服务">1. 定义服务</h3> <h4 id="11-创建空白的-aspnet-core-应用程序它提供服务的寄宿支持">1.1 创建空白的 ASP.NET Core 应用程序，它提供服务的寄宿支持</h4> <p>Visual Studio</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/649cb3fec1937c4f8dc858a6a129a623.jpg" alt="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF - 冠军 _在线工具"></p> <p>命令行：</p> <pre><code class="language-bash">mkdir CoreWCFDemoServer dotnet new web -n CoreWCFDemoServer -o CoreWCFDemoServer </code></pre> <h4 id="12-添加-corewcf-nuget-包">1.2 添加 CoreWCF Nuget 包</h4> <p>Visual Studio</p> <p>使用包管理器控制台，添加：</p> <ul> <li>CoreWCF.Primitives</li> <li>CoreWCF.Http</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/a1a54dfdcf0e287b54d86e5e84ce4002.jpg" alt="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF - 冠军 _在线工具"></p> <p>编辑项目文件，并添加：</p> <pre><code class="language-xml">&lt;ItemGroup&gt;   &lt;PackageReference Include="CoreWCF.Http" Version="1.0.0" /&gt;   &lt;PackageReference Include="CoreWCF.Primitives" Version="1.0.0" /&gt; &lt;/ItemGroup&gt; </code></pre> <h4 id="13-创建服务约定和数据约定定义">1.3 创建服务约定和数据约定定义</h4> <p>这些定义与 WCF 中相同。当改进项目的时候，这些代码很大部分不需要修改。</p> <p>文件：IEchoService.cs</p> <pre><code class="language-csharp">using System.Diagnostics.CodeAnalysis; using System.Runtime.Serialization; using CoreWCF;  namespace CoreWCfDemoServer {     [DataContract]     public class EchoFault     {         [AllowNull]         private string _text;          [DataMember]         [AllowNull]         public string Text         {             get { return _text; }             set { _text = value; }         }     }      [ServiceContract]     public interface IEchoService     {         [OperationContract]         string Echo(string text);          [OperationContract]         string ComplexEcho(EchoMessage text);          [OperationContract]         [FaultContract(typeof(EchoFault))]         string FailEcho(string text);      }      [DataContract]     public class EchoMessage     {         [AllowNull]         [DataMember]         public string Text { get; set; }     } } </code></pre> <p>文件 EchoService.cs</p> <pre><code class="language-csharp">using CoreWCF;  namespace CoreWCfDemoServer {     public class EchoService : IEchoService     {         public string Echo(string text)         {             System.Console.WriteLine($"Received {text} from client!");             return text;         }          public string ComplexEcho(EchoMessage text)         {             System.Console.WriteLine($"Received {text.Text} from client!");             return text.Text;         }          public string FailEcho(string text)             =&gt; throw new FaultException&lt;EchoFault&gt;(new EchoFault() { Text = "WCF Fault OK" }, new FaultReason("FailReason"));      } } </code></pre> <h4 id="14-需要告诉服务宿主哪些服务需要通过绑定暴露出来">1.4 需要告诉服务宿主哪些服务需要通过绑定暴露出来</h4> <p>更新 Program.cs 来暴露绑定。</p> <pre><code class="language-csharp">using CoreWCF; using CoreWCF.Configuration; using CoreWCF.Description; using CoreWCfDemoServer;  var builder = WebApplication.CreateBuilder(args); builder.WebHost.ConfigureKestrel((context, options) =&gt; {     options.AllowSynchronousIO = true; });  // Add WSDL support builder.Services.AddServiceModelServices().AddServiceModelMetadata(); builder.Services.AddSingleton&lt;IServiceBehavior, UseRequestHeadersForMetadataAddressBehavior&gt;();  var app = builder.Build(); app.UseServiceModel(builder =&gt; {     builder.AddService((serviceOptions) =&gt; { })         // Add a BasicHttpBinding at a specific endpoint         .AddServiceEndpoint&lt;EchoService, IEchoService&gt;(new BasicHttpBinding(), "/EchoService/basichttp")         // Add a WSHttpBinding with Transport Security for TLS         .AddServiceEndpoint&lt;EchoService, IEchoService&gt;(new WSHttpBinding(SecurityMode.Transport), "/EchoService/WSHttps"); }); var serviceMetadataBehavior = app.Services.GetRequiredService(); serviceMetadataBehavior.HttpGetEnabled = true;  app.Run(); </code></pre> <h4 id="15-更新-appsettingsjson-来指定固定的服务监听端口">1.5 更新 appsettings.json 来指定固定的服务监听端口</h4> <p>在 appsettings.json 文件中的 <code>Logging</code> 之前，增加如下行。</p> <pre><code class="language-json">"Urls": "http://localhost:5000;https://localhost:5001", </code></pre> <h4 id="16-运行项目以便服务可以被访问">1.6 运行项目以便服务可以被访问</h4> <h3 id="2-消费服务">2. 消费服务</h3> <h4 id="21-创建控制台应用">2.1 创建控制台应用</h4> <h4 id="22-添加服务引用">2.2 添加服务引用</h4> <p>Visual Studio</p> <p>使用 <code>添加服务引用</code> 命令，选择 <code>WCF Web Service</code> 作为服务类型</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/77942991e4476714236d2aa788a00820.jpg" alt="CoreWCF 1.0 正式发布，支持 .NET Core 和 .NET 5+ 的 WCF - 冠军 _在线工具"></p> <p>使用 <code> http://localhost:5000/EchoService/basichttp</code> 作为 WSDL 服务发现的 URL 地址。</p> <p>命令行方式：</p> <pre><code class="language-bash">dotnet tool install --global dotnet-svcutil dotnet-svcutil --roll-forward LatestMajor http://localhost:5000/EchoService/basichttp?wsdl </code></pre> <h4 id="23-将控制台应用代码替换为如下代码">2.3 将控制台应用代码替换为如下代码</h4> <pre><code class="language-csharp">using ServiceReference1; // Instantiate the Service wrapper specifying the binding and optionally the Endpoint URL. The BasicHttpBinding could be used instead. var client = new EchoServiceClient(EchoServiceClient.EndpointConfiguration.WSHttpBinding_IEchoService, "https://localhost:5001/EchoService/WSHttps");  var simpleResult = await client.EchoAsync("Hello"); Console.WriteLine(simpleResult);  var msg = new EchoMessage() { Text = "Hello2" }; var msgResult = await client.ComplexEchoAsync(msg); Console.WriteLine(msgResult); </code></pre> <h2 id="其它示例">其它示例</h2> <p>其它示例，包括桌面应用示例，请参阅：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/CoreWCF/CoreWCF/tree/main/src/Samples"  target="_blank"  rel="nofollow">CoreWCF/src/Samples</a></p> <h2 id="总结">总结</h2> <p>我们很高兴看到社区在 CoreWCF 上的投入，并祝贺此发布。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-79910.htm">如何保证Redis缓存和数据库一致性？</a></p>
                                        <p>下一个：<a href="/news/article-80615.htm">一个完整的pytorch预训练实现图像分类，模型融合</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-18-free-high-speed-nodes.htm" title="2月18日→18.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址">2月18日→18.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-18-node-share.htm" title="3月18日→20.8M/S|2025年最新免费节点V2ray Desktop订阅链接地址">3月18日→20.8M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-node-share.htm" title="3月13日→21.9M/S|2025年最新免费节点V2ray Desktop订阅链接地址">3月13日→21.9M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-69814.htm" title="简述动物疫苗的种类有哪些 简述动物疫苗的种类有哪些呢">简述动物疫苗的种类有哪些 简述动物疫苗的种类有哪些呢</a></li>
                        <li class="py-2"><a href="/news/article-56579.htm" title="长沙宠物领养中心在哪个位置 长沙宠物领养中心在哪个位置啊">长沙宠物领养中心在哪个位置 长沙宠物领养中心在哪个位置啊</a></li>
                        <li class="py-2"><a href="/news/article-67862.htm" title="厨房水盆品牌有哪些牌子(厨房水盆品牌有哪些好)">厨房水盆品牌有哪些牌子(厨房水盆品牌有哪些好)</a></li>
                        <li class="py-2"><a href="/news/article-73769.htm" title="ModelSerializer序列化器实战">ModelSerializer序列化器实战</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-19-node-share.htm" title="1月19日→22.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址">1月19日→22.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-27-node-share.htm" title="2月27日→20.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址">2月27日→20.7M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-28-free-node-subscribe-links.htm" title="2月28日→20.9M/S|2025年最新免费节点V2ray Desktop订阅链接地址">2月28日→20.9M/S|2025年最新免费节点V2ray Desktop订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //about -->
        <!-- copyright -->
    <section class="w3l-copyright">
        <div class="container">
            <div class="row bottom-copies">
                <p class="col-lg-8 copy-footer-29">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">V2ray Desktop免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                </p>
                <div class="col-lg-4 text-right">
                    <div class="main-social-footer-29">
                        <a href="#facebook" class="facebook"><span class="fa fa-facebook"></span></a>
                        <a href="#twitter" class="twitter"><span class="fa fa-twitter"></span></a>
                        <a href="#google"><span class="fa fa-google-plus" aria-hidden="true"></span></a>
                        <a href="#instagram" class="instagram"><span class="fa fa-instagram"></span></a>
                        <a href="#linkedin" class="linkedin"><span class="fa fa-linkedin"></span></a>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- //copyright -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raydesktop/jquery-3.6.0.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raydesktop/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/v2raydesktop/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raydesktop/counter.js"></script>
    <!-- //counter for stats -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <script src="/assets/website/js/frontend/v2raydesktop/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>